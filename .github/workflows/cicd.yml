name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql: # This service starts a temporary MySQL database
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ""
          MYSQL_DATABASE: userdb   # <-- UPDATED FROM testdb
        ports:
          - 3308:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    # Step 1: Check out your code from the repository
    - uses: actions/checkout@v4

    # Step 2: Set up the Java environment (using version 17 as an example)
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

        
    - name: Make gradlew executable
      run: chmod +x gradlew
      
    # Step 3: Build the project with Gradle
    - name: Build with Gradle Wrapper
      run: ./gradlew build
      env: # These variables tell your application how to connect to the database
        SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3308/userdb   # <-- UPDATED FROM testdb
        SPRING_DATASOURCE_USERNAME: root
        SPRING_DATASOURCE_PASSWORD: ""

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
